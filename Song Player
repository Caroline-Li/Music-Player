/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package musicplayer;

import java.util.Iterator;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Set;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author li_873239
 */
public class PlaySongs implements Runnable
{

    private final Queue<MusicPlayer> playList;
    private MusicPlayer play;
    private int numSongs;
    public PlaySongs(LinkedList<MusicPlayer> playList)
    {
        this.playList = new LinkedList<MusicPlayer>();
        numSongs = playList.size();
        for (int i = 0; i < playList.size(); i++)
        {
           
            this.playList.add(playList.get(i));
        }
        play = this.playList.poll();
        
    }
@Override
public void run()
    {
        System.out.println("hi");
          System.out.println(numSongs);
          
        
         for (int j = 0; j < numSongs; j++)
         {
          synchronized (play)
          {
          play.playMusic();
        while (play.isPlaying())
        {
            try{
                play.wait(5);
            }
            catch(InterruptedException ex)
            {
                ex.printStackTrace();
            }
        }
            
        
   }
    }
    }
public void getSong()
{
    play = playList.poll();

}
public void pause() throws InterruptedException
{
    synchronized (play)
    {
        while (play.isPaused())
        {
            play.wait(5);
        }
        
    }
}
public void resume()
{
        if (!play.endOfMusic())
        {
            play.playMusic();
        }


        
        
    
}
public boolean isDone()
{
    return play.endOfMusic();
}
        
}

